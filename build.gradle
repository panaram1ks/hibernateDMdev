plugins {
    id 'java'
//    id "at.comm_unity.gradle.plugins.jpamodelgen" version "1.1.4"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

configurations {
    querydsl.extendsFrom implementation, runtimeOnly, compileOnly
}

//sourceSets.main.java.srcDirs += "${buildDir}/generated/annotationProcessor"
//
//compileJava {
//    options.annotationProcessorGeneratedSourcesDirectory = file("${buildDir}/generated/annotationProcessor")
//}


dependencies {
    // hibernate cache 2 level
    implementation 'org.hibernate:hibernate-jcache:5.5.7.Final' // only interfaces
    implementation 'org.ehcache:ehcache:3.9.7' // realization  of interfaces 2nd level cache

    implementation 'com.vladmihalcea:hibernate-types-52:2.12.1'
    implementation 'org.hibernate:hibernate-core:5.5.7.Final'
    implementation 'org.hibernate:hibernate-envers:5.5.7.Final'

    implementation 'org.slf4j:slf4j-log4j12:1.7.32'

    runtimeOnly 'org.postgresql:postgresql:42.2.23'
    compileOnly 'org.projectlombok:lombok:1.18.30'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
//    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.5.7.Final' //should be like Hibernate core version

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.testcontainers:postgresql:1.16.3'
    testImplementation 'org.assertj:assertj-core:3.21.0'

}

querydsl {
    jpa = true
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
//    enable = false
    options.annotationProcessorPath = configurations.querydsl
}
compileQuerydsl.dependsOn(clean)

test {
    useJUnitPlatform()
}